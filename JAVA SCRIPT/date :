JavaScript Date 객체는 시간의 한 점을 플랫폼에 종속되지 않는 형태로 나타낸다.
Date 객체는 1970년 1월 1일 UTC(협정 세계시) 자정과의 시간 차이를 밀리초로 나타내는 정수 값을 담는다.
Example1)

인스턴스 메서드
Date.prototype.getMonth()
Date에서 현지 시간 기준 월을 반환합니다.
* Example)
var myMonth = (new Date()).getMonth();
console.log(myMonth); // The myMonth is 6 which is, July

Date.prototype.getDate()
Date에서 현지 시간 기준 일(1–31)을 반환합니다.
* Example)
var myDay = (new Date()).getDate();
console.log(myDay ); // outputs 3 (since this lecture is on the 3rd of June)

Date.prototype.getDay()
Date에서 현지 시간 기준 요일(0–6)을 반환합니다.
Date.prototype.getFullYear()
Date에서 현지 시간 기준 연도(네 자리 연도면 네 자리로)를 반환합니다.
Date.prototype.getHours()
Date에서 현지 시간 기준 시(0–23)를 반환합니다.
Date.prototype.getMilliseconds()
Date에서 현지 시간 기준 밀리초(0–999)를 반환합니다.
Date.prototype.getMinutes()
Date에서 현지 시간 기준 분(0–59)을 반환합니다.
Date.prototype.getMonth()
Date에서 현지 시간 기준 월(0–11)을 반환합니다.
Date.prototype.getSeconds()
Date에서 현지 시간 기준 초(0–59)를 반환합니다.
Date.prototype.getTime()
1970년 1월 1일 00:00:00 UTC로부터의 경과시간을 밀리초 단위로 반환합니다. Date가 기준 시간 이전을 나타낼 경우 음수 값을 반환합니다.
Date.prototype.getTimezoneOffset()
현지 시간대와 UTC의 차이를 분 단위로 반환합니다.
Date.prototype.getUTCDate()
Date에서 국제 시간 기준 일(1–31)을 반환합니다.
Date.prototype.getUTCDay()
Date에서 국제 시간 기준 요일(0–6)을 반환합니다.
Date.prototype.getUTCFullYear()
Date에서 국제 시간 기준 연도(네 자리 연도면 네 자리로)를 반환합니다.
Date.prototype.getUTCHours()
Date에서 국제 시간 기준 시(0–23)를 반환합니다.
Date.prototype.getUTCMilliseconds()
Date에서 국제 시간 기준 밀리초(0–999)를 반환합니다.
Date.prototype.getUTCMinutes()
Date에서 국제 시간 기준 분(0–59)을 반환합니다.
Date.prototype.getUTCMonth()
Date에서 국제 시간 기준 월(0–11)을 반환합니다.
Date.prototype.getUTCSeconds()
Date에서 국제 시간 기준 초(0–59)를 반환합니다.
Date.prototype.setDate()
현지 시간 기준으로 일을 설정합니다.
Date.prototype.setFullYear()
현지 시간 기준으로 연도(네 자리 연도면 네 자리로)를 설정합니다.
Date.prototype.setHours()
현지 시간 기준으로 시를 설정합니다.
Date.prototype.setMilliseconds()
현지 시간 기준으로 밀리초를 설정합니다.
Date.prototype.setMinutes()
현지 시간 기준으로 분을 설정합니다.
Date.prototype.setMonth()
현지 시간 기준으로 월을 설정합니다.
Date.prototype.setSeconds()
현지 시간 기준으로 초를 설정합니다.
Date.prototype.setTime()
Date가 나타낼 시간을 1970년 1월 1일 00:00:00 UTC로부터의 경과시간(밀리초)으로 설정합니다. 기준 이전의 시간은 음수 값을 사용해 설정할 수 있습니다.
Date.prototype.setUTCDate()
국제 시간 기준으로 일을 설정합니다.
Date.prototype.setUTCFullYear()
국제 시간 기준으로 연도(네 자리 연도면 네 자리로)를 설정합니다.
Date.prototype.setUTCHours()
국제 시간 기준으로 시를 설정합니다.
Date.prototype.setUTCMilliseconds()
국제 시간 기준으로 밀리초를 설정합니다.
Date.prototype.setUTCMinutes()
국제 시간 기준으로 분을 설정합니다.
Date.prototype.setUTCMonth()
국제 시간 기준으로 월을 설정합니다.
Date.prototype.setUTCSeconds()
국제 시간 기준으로 초를 설정합니다.
Date.prototype.toDateString()
Date의 날짜 부분만 나타내는, 사람이 읽을 수 있는 문자열을 반환합니다.
Date.prototype.toISOString()
Date를 나타내는 문자열을 ISO 8601 확장 형식에 맞춰 반환합니다.
Date.prototype.toJSON()
toISOString()을 사용해서 Date를 나타내는 문자열을 반환합니다. JSON.stringify()에서 사용합니다.
Date.prototype.toLocaleDateString() (en-US)
Date의 날짜 부분을 나타내는 문자열을 시스템에 설정된 현재 지역의 형식으로 반환합니다.
Date.prototype.toLocaleFormat()
형식 문자열을 사용해서 Date를 나타내는 문자열을 생성합니다.
Date.prototype.toLocaleString() (en-US)
Date를 나타내는 문자열을 현재 지역의 형식으로 반환합니다. Object.prototype.toLocaleString() 메서드를 재정의합니다.
Date.prototype.toLocaleTimeString() (en-US)
Date의 시간 부분을 나타내는 문자열을 시스템에 설정된 현재 지역의 형식으로 반환합니다.
Date.prototype.toString()
Date를 나타내는 시간 문자열을 반환합니다. Object.prototype.toString() 메서드를 재정의합니다.
Date.prototype.toTimeString() (en-US)
Date의 시간 부분만 나타내는, 사람이 읽을 수 있는 문자열을 반환합니다.
Date.prototype.toUTCString() (en-US)
Date를 나타내는 문자열을 UTC 기준으로 반환합니다.
Date.prototype.valueOf()
Date 객체의 원시 값을 반환합니다. Object.prototype.valueOf() 메서드를 재정의합니다.




====Date 객체를 만드는 여러가지 방법
아래 예제는 JavaScript 날짜를 생성하는 몇 가지 방법.

참고: Date 생성자(및 동일한 동작의 Date.parse())를 사용한 날짜 분석은 동작이 일관적이지 못하고 브라우저끼리 차이가 존재하므로 사용하지 않는 것이 좋습니다.

let today = new Date()
let birthday = new Date('December 17, 1995 03:24:00')
let birthday = new Date('1995-12-17T03:24:00')
let birthday = new Date(1995, 11, 17)            // 월은 0부터 시작
let birthday = new Date(1995, 11, 17, 3, 24, 0)


두 자리 연도는 1900년대로
Date의 연도에 0부터 99까지의 정수를 제공하면 1900부터 1999로 처리합니다. 다른 모든 값은 그대로 사용합니다.
1900년대가 아닌, 실제 0 ~ 99년을 지정해야 하면 Date.prototype.setFullYear()와 Date.prototype.getFullYear() 메서드를 사용해야 합니다.

let date = new Date(98, 1)  // Sun Feb 01 1998 00:00:00 GMT+0900 (대한민국 표준시)
// 구형 메서드: 여기서도 98을 1998로 처리
date.setYear(98)            // Sun Feb 01 1998 00:00:00 GMT+0900 (대한민국 표준시)
date.setFullYear(98)        // Sat Feb 01 0098 00:00:00 GMT+0827 (대한민국 표준시)


Example3)

var myDate = new Date();
var myHour = myDate.getHours();
var myMinutes = myDate.getMinutes();
var mySeconds = myDate.getSeconds();

console.log(myHour + ":" +  myMinutes  + ":" + mySeconds); 

// outputs 10:30:35 (If this statement was 
// executed at 10:30 and 35 seconds in the morning)




